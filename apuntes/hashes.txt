ü§î ¬øPor qu√© es importante usar Hashes en nuestros archivos?
Los recursos que se guardan en memoria cache suceden cuando el navegador entra a un sitio por primera vez detecta los recursos y los guarda. Por ello la siguiente vez sera mucho m√°s r√°pido porque estar√°n en memoria
La desventaja esta cuando sacamos una nueva versi√≥n, porque tendr√°n un mismo nombre evitando que se descargue los nuevos cambios, por lo tanto, el usuario no recibir√° los nuevos cambios
Para que no haya conflictos con la cache una vez que tengamos nuestro proyecto en producci√≥n es importante darles un hash para cada nueva versi√≥n.

üèóÔ∏è Optimizaci√≥n: hashes, compresi√≥n y minificaci√≥n de archivos
<h4>Apuntes</h4>
Unos de las razones por que utilizamos webpack es porque nos permite optimizar y comprimir nuestro proyecto
Debes utilizar los siguientes paquetes
css-minimizer-webpack-plugin ‚áí Nos ayuda a comprimir nuestros archivos finales CSS
terser-webpack-plugin ‚áí Permite minificar de una mejor forma
Instalaci√≥n
NPM

npm i css-minimizer-webpack-plugin terser-webpack-plugin -D
YARN

yarn add css-minimizer-webpack-plugin terser-webpack-plugin -D
Una vez instalado el plugin debemos agregar la siguiente configuraci√≥n
...
const CssMinimizerPlugin = require('css-minimizer-webpack-plugin');
const TerserPlugin = require('terser-webpack-plugin');

module.exports = {
	...
	optimization: {
    minimize: true,
    minimizer: [
      new CssMinimizerPlugin(),
      new TerserPlugin()
    ]
  }
}
Cuando nombremos en la configuraci√≥n de webpack es importante usar [contenthash] para evitar problemas con la cache
