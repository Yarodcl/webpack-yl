BABEL LOADER PARA JAVASCRIPT

Babel es una herramienta que nos permite transformar nuestro c칩digo JS de 칰ltima generaci칩n (o con funcionalidades extras) a JS que cualquier navegador o versi칩n de Node.js entienda.

En Webpack, contamos con loaders para preprocesar los archivos y convertirlos en m칩dulos validos que pueden ser consumidos por la aplicaci칩n.

Para iniciar debemos instalar las dependencias necesarias, mediante el comando npm install babel-loader @babel/core @babel/preset-env @babel/plugin-transform-runtime -D.
Esto nos instalar치 la dependencia completa para Babel. 游댕 GitHub babel-loader. @babel/plugin-transform-runtime nos permite trabajar con asincronismo.

Lo siguiente es crear un archivo oculto en la ra칤z de nuestro directorio al cual le llamaremos .babelrc, este archivo presentado de la siguiente manera:

// Configuraci칩n base de babel
{
    "presets": [
        "@babel/preset-env"
    ],
    "plugins": [
        "@babel/plugin-transform-runtime"
    ]
}
Lo que sigue es a침adir la configuraci칩n a nuestro Webpack.

const path = require("path");

module.exports = {
  entry: "./src/index.js",
  output: {
    path: path.resolve(__dirname, "dist"),
    filename: "main.js",
  },
  resolve: {
    extensions: [".js"],
  },
  module: {
    rules: [
      {
        test: /\.m?js$/,
        exclude: /node_modules/,
        use: {
          loader: "babel-loader",
        },
      },
    ],
  },
};
Elementos nuevos a침adidos:

module: Es el sitio donde vamos a a침adir la nueva configuraci칩n de babel.
rules: Las reglas que se establecer치n dentro del proyecto.
test: qu칠 tipo de extensiones vamos a trabajar, o cu치les archivos vamos a transformar. Para ello utilizaremos regEx.
exclude: Necesitamos excluir archivos para evitar da침ar nuestro proyecto, especificamente archivos de /node_modules/
use: Aqu칤 vamos a definir qu칠 loader vamos a utilizar para la transformaci칩n.
B치sicamente Webpack leer치 toda la instrucci칩n de la siguiente manera: "Cuando encuentres un import o un require con extensi칩n .mjs o .js, usa babel-loader para transformarlo antes de empaquetarlo.*